{"version":3,"sources":["../src/getMapping.js"],"names":["require","SourceMapConsumer","getMapping","sourceMap","location","start","line","column","end","originalPositionFor","source","bias","LEAST_UPPER_BOUND","loc","skip","module","exports"],"mappings":";;eAA8BA,QAAQ,YAAR,C;IAAtBC,iB,YAAAA,iB;;AAER;;;;;;;;AAMA,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,QAA/B,EAAyC;AACxC;AACA,KAAIA,SAASC,KAAT,CAAeC,IAAf,GAAsB,CAAtB,IAA2BF,SAASC,KAAT,CAAeE,MAAf,GAAwB,CAAvD,EAA0D;AACzD,SAAO,IAAP;AACA;AACD;AACA,KAAIH,SAASI,GAAT,CAAaF,IAAb,GAAoB,CAApB,IAAyBF,SAASI,GAAT,CAAaD,MAAb,GAAsB,CAAnD,EAAsD;AACrD,SAAO,IAAP;AACA;;AAED,KAAMF,QAAQF,UAAUM,mBAAV,CAA8BL,SAASC,KAAvC,CAAd;AACA,KAAIG,MAAML,UAAUM,mBAAV,CAA8BL,SAASI,GAAvC,CAAV;;AAEA;AACA,KAAI,CAACH,KAAD,IAAU,CAACG,GAAf,EAAoB;AACnB,SAAO,IAAP;AACA;AACD,KAAI,CAACH,MAAMK,MAAP,IAAiB,CAACF,IAAIE,MAAtB,IAAgCL,MAAMK,MAAN,KAAiBF,IAAIE,MAAzD,EAAiE;AAChE,SAAO,IAAP;AACA;AACD;AACA,KAAIL,MAAMC,IAAN,KAAe,IAAf,IAAuBD,MAAME,MAAN,KAAiB,IAA5C,EAAkD;AACjD,SAAO,IAAP;AACA;AACD;AACA,KAAIC,IAAIF,IAAJ,KAAa,IAAb,IAAqBE,IAAID,MAAJ,KAAe,IAAxC,EAA8C;AAC7C,SAAO,IAAP;AACA;;AAED,KAAIF,MAAMC,IAAN,KAAeE,IAAIF,IAAnB,IAA2BD,MAAME,MAAN,KAAiBC,IAAID,MAApD,EAA4D;AAC3DC,QAAML,UAAUM,mBAAV,CAA8B;AACnCH,SAAMF,SAASI,GAAT,CAAaF,IADgB;AAEnCC,WAAQH,SAASI,GAAT,CAAaD,MAFc;AAGnCI,SAAMV,kBAAkBW;AAHW,GAA9B,CAAN;AAKAJ,MAAID,MAAJ,IAAc,CAAd;AACA;;AAED,QAAO;AACNG,UAAQL,MAAMK,MADR;AAENG,OAAK;AACJR,UAAO;AACNC,UAAMD,MAAMC,IADN;AAENC,YAAQF,MAAME;AAFR,IADH;AAKJC,QAAK;AACJF,UAAME,IAAIF,IADN;AAEJC,YAAQC,IAAID;AAFR,IALD;AASJO,SAAMV,SAASU;AATX;AAFC,EAAP;AAcA;;AAEDC,OAAOC,OAAP,GAAiBd,UAAjB","file":"getMapping.js","sourcesContent":["const { SourceMapConsumer } = require('source-map');\r\n\r\n/**\r\n * A function that determines the original position for a given location\r\n * @param  {SourceMapConsumer} sourceMap        The source map\r\n * @param  {Object}            location         The original location Object\r\n * @return {Object}                             The remapped location Object\r\n */\r\nfunction getMapping(sourceMap, location) {\r\n\t/* istanbul ignore if: edge case too hard to test for with babel malformation */\r\n\tif (location.start.line < 1 || location.start.column < 0) {\r\n\t\treturn null;\r\n\t}\r\n\t/* istanbul ignore if: edge case too hard to test for with babel malformation */\r\n\tif (location.end.line < 1 || location.end.column < 0) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst start = sourceMap.originalPositionFor(location.start);\r\n\tlet end = sourceMap.originalPositionFor(location.end);\r\n\r\n\t/* istanbul ignore if: edge case too hard to test for */\r\n\tif (!start || !end) {\r\n\t\treturn null;\r\n\t}\r\n\tif (!start.source || !end.source || start.source !== end.source) {\r\n\t\treturn null;\r\n\t}\r\n\t/* istanbul ignore if: edge case too hard to test for */\r\n\tif (start.line === null || start.column === null) {\r\n\t\treturn null;\r\n\t}\r\n\t/* istanbul ignore if: edge case too hard to test for */\r\n\tif (end.line === null || end.column === null) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tif (start.line === end.line && start.column === end.column) {\r\n\t\tend = sourceMap.originalPositionFor({\r\n\t\t\tline: location.end.line,\r\n\t\t\tcolumn: location.end.column,\r\n\t\t\tbias: SourceMapConsumer.LEAST_UPPER_BOUND,\r\n\t\t});\r\n\t\tend.column -= 1;\r\n\t}\r\n\r\n\treturn {\r\n\t\tsource: start.source,\r\n\t\tloc: {\r\n\t\t\tstart: {\r\n\t\t\t\tline: start.line,\r\n\t\t\t\tcolumn: start.column,\r\n\t\t\t},\r\n\t\t\tend: {\r\n\t\t\t\tline: end.line,\r\n\t\t\t\tcolumn: end.column,\r\n\t\t\t},\r\n\t\t\tskip: location.skip,\r\n\t\t},\r\n\t};\r\n}\r\n\r\nmodule.exports = getMapping;\r\n"]}