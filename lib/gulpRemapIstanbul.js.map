{"version":3,"sources":["../src/gulpRemapIstanbul.js"],"names":["remap","require","writeReport","MemoryStore","PluginError","through","module","exports","opts","obj","file","enc","cb","warn","message","fail","console","error","sources","isNull","isStream","collector","JSON","parse","contents","toString","map","length","p","reports","forEach","key","push","reportOpts","Buffer","getFinalCoverage","all","then"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA,IAAMA,QAAQC,QAAQ,SAAR,CAAd;AACA,IAAMC,cAAcD,QAAQ,eAAR,CAApB;AACA,IAAME,cAAcF,QAAQ,2BAAR,CAApB;;eACwBA,QAAQ,WAAR,C;IAAhBG,W,YAAAA,W;;AACR,IAAMC,UAAUJ,QAAQ,UAAR,CAAhB;;AAEA;;AAEAK,OAAOC,OAAP,GAAiB,YAAqB;AAAA,KAAXC,IAAW,uEAAJ,EAAI;;AACrC,QAAOH,QAAQI,GAAR,CAAY,UAACC,IAAD,EAAOC,GAAP,EAAYC,EAAZ,EAAmB;AACrC,MAAI,CAACJ,KAAKK,IAAV,EAAgB;AACfL,QAAKK,IAAL,GAAY,UAACC,OAAD,EAAa;AACxB,QAAIN,KAAKO,IAAT,EAAe;AACdH,QAAG,IAAIR,WAAJ,CAAgB,gBAAhB,EAAkCU,OAAlC,CAAH;AACA,KAFD,MAEO;AACNE,aAAQC,KAAR,CAAcH,OAAd;AACA;AACD,IAND;AAOA;;AAEDN,OAAKU,OAAL,GAAe,IAAIf,WAAJ,EAAf;;AAEA,MAAIO,KAAKS,MAAL,EAAJ,EAAmB;AAClBP,MAAG,IAAH,EAASF,IAAT;AACA;;AAED,MAAIA,KAAKU,QAAL,EAAJ,EAAqB;AACpBR,MAAG,IAAIR,WAAJ,CAAgB,gBAAhB,EAAkC,yBAAlC,CAAH;AACA;;AAED,MAAMiB,YAAYrB,MAAMsB,KAAKC,KAAL,CAAWb,KAAKc,QAAL,CAAcC,QAAd,CAAuB,MAAvB,CAAX,CAAN,EAAkDjB,IAAlD,CAAlB;;AAEA,MAAIU,gBAAJ;AACA,MAAI,oBAAYV,KAAKU,OAAL,CAAaQ,GAAzB,EAA8BC,MAAlC,EAA0C;AACzCT,aAAUV,KAAKU,OAAf;AACA;;AAED,MAAMU,IAAI,EAAV;AACA,MAAIpB,KAAKqB,OAAT,EAAkB;AACjB,uBAAYrB,KAAKqB,OAAjB,EAA0BC,OAA1B,CAAkC,UAACC,GAAD,EAAS;AAC1CH,MAAEI,IAAF,CAAO9B,YAAYmB,SAAZ,EAAuBU,GAAvB,EAA4BvB,KAAKyB,UAAL,IAAmB,EAA/C,EAAmDzB,KAAKqB,OAAL,CAAaE,GAAb,CAAnD,EAAsEb,OAAtE,CAAP;AACA,IAFD;AAGA;;AAEDR,OAAKc,QAAL,GAAgB,IAAIU,MAAJ,CAAW,yBAAeb,UAAUc,gBAAV,EAAf,CAAX,CAAhB;;AAEA,oBAAQC,GAAR,CAAYR,CAAZ,EAAeS,IAAf,CAAoB,YAAM;AACzBzB,MAAG,IAAH,EAASF,IAAT;AACA,GAFD;AAGA,EAxCM,CAAP;AAyCA,CA1CD","file":"gulpRemapIstanbul.js","sourcesContent":["/* jshint node: true */\r\n/* jshint -W079 */\r\nconst remap = require('./remap');\r\nconst writeReport = require('./writeReport');\r\nconst MemoryStore = require('istanbul/lib/store/memory');\r\nconst { PluginError } = require('gulp-util');\r\nconst through = require('through2');\r\n\r\n/* global Promise */\r\n\r\nmodule.exports = function (opts = {}) {\r\n\treturn through.obj((file, enc, cb) => {\r\n\t\tif (!opts.warn) {\r\n\t\t\topts.warn = (message) => {\r\n\t\t\t\tif (opts.fail) {\r\n\t\t\t\t\tcb(new PluginError('remap-istanbul', message));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(message);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\topts.sources = new MemoryStore();\r\n\r\n\t\tif (file.isNull()) {\r\n\t\t\tcb(null, file);\r\n\t\t}\r\n\r\n\t\tif (file.isStream()) {\r\n\t\t\tcb(new PluginError('remap-istanbul', 'Streaming not supported'));\r\n\t\t}\r\n\r\n\t\tconst collector = remap(JSON.parse(file.contents.toString('utf8')), opts);\r\n\r\n\t\tlet sources;\r\n\t\tif (Object.keys(opts.sources.map).length) {\r\n\t\t\tsources = opts.sources;\r\n\t\t}\r\n\r\n\t\tconst p = [];\r\n\t\tif (opts.reports) {\r\n\t\t\tObject.keys(opts.reports).forEach((key) => {\r\n\t\t\t\tp.push(writeReport(collector, key, opts.reportOpts || {}, opts.reports[key], sources));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfile.contents = new Buffer(JSON.stringify(collector.getFinalCoverage()));\r\n\r\n\t\tPromise.all(p).then(() => {\r\n\t\t\tcb(null, file);\r\n\t\t});\r\n\t});\r\n};\r\n"]}